local function notify(title, desc, duration, bgColor, outlineColor)
    -- Default values
    duration = duration or 5
    bgColor = bgColor or Color3.fromRGB(25, 25, 25)
    outlineColor = outlineColor or Color3.fromRGB(100, 150, 255)
    
    -- Create notification sound
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://4590662766"
    sound.Volume = 0.3
    sound.Parent = game:GetService("SoundService")
    sound:Play()
    
    -- Get parent GUI
    local parentGui = game:GetService("CoreGui"):FindFirstChild("RobloxGui") or game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    
    -- Create main frame with rounded corners
    local notification = Instance.new("Frame")
    notification.Name = "Notification"
    notification.BackgroundColor3 = bgColor
    notification.BackgroundTransparency = 0.1
    notification.BorderSizePixel = 0
    notification.Position = UDim2.new(1, 10, 0.05, 0) -- Start off-screen to the right
    notification.Size = UDim2.new(0, 320, 0, 0) -- Start with height 0 for animation
    notification.ZIndex = 100
    notification.ClipsDescendants = true
    notification.Parent = parentGui
    
    -- Add corner rounding
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = notification
    
    -- Create glowing outline with animation
    local outline = Instance.new("UIStroke")
    outline.Name = "GlowOutline"
    outline.Color = outlineColor
    outline.Thickness = 2
    outline.Transparency = 0.5
    outline.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    outline.Parent = notification
    
    -- Animate the outline glow
    spawn(function()
        while notification and notification.Parent do
            for i = 0.5, 1, 0.05 do
                if not notification then break end
                outline.Transparency = i
                task.wait(0.05)
            end
            for i = 1, 0.5, -0.05 do
                if not notification then break end
                outline.Transparency = i
                task.wait(0.05)
            end
        end
    end)
    
    -- Create icon (optional)
    local icon = Instance.new("ImageLabel")
    icon.Name = "Icon"
    icon.Image = "rbxassetid://3926305904" -- Default info icon
    icon.ImageRectSize = Vector2.new(36, 36)
    icon.ImageRectOffset = Vector2.new(964, 324)
    icon.BackgroundTransparency = 1
    icon.Position = UDim2.new(0, 10, 0, 15)
    icon.Size = UDim2.new(0, 24, 0, 24)
    icon.ZIndex = 101
    icon.Parent = notification
    
    -- Create title text
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Text = title or "Notification"
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.GothamSemibold
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 45, 0, 15)
    titleLabel.Size = UDim2.new(1, -55, 0, 24)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.ZIndex = 101
    titleLabel.Parent = notification
    
    -- Create description text
    local descLabel = Instance.new("TextLabel")
    descLabel.Name = "Description"
    descLabel.Text = desc or ""
    descLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    descLabel.TextSize = 14
    descLabel.Font = Enum.Font.Gotham
    descLabel.BackgroundTransparency = 1
    descLabel.Position = UDim2.new(0, 45, 0, 45)
    descLabel.Size = UDim2.new(1, -55, 1, -60)
    descLabel.TextXAlignment = Enum.TextXAlignment.Left
    descLabel.TextYAlignment = Enum.TextYAlignment.Top
    descLabel.TextWrapped = true
    descLabel.ZIndex = 101
    descLabel.Parent = notification
    
    -- Create close button (X in top right)
    local closeButton = Instance.new("ImageButton")
    closeButton.Name = "CloseButton"
    closeButton.Image = "rbxassetid://3926305904"
    closeButton.ImageRectSize = Vector2.new(24, 24)
    closeButton.ImageRectOffset = Vector2.new(284, 4)
    closeButton.BackgroundTransparency = 1
    closeButton.Position = UDim2.new(1, -34, 0, 10)
    closeButton.Size = UDim2.new(0, 24, 0, 24)
    closeButton.ZIndex = 102
    closeButton.Parent = notification
    
    -- Create duration bar with rounded bottom corners
    local durationBarContainer = Instance.new("Frame")
    durationBarContainer.Name = "DurationBarContainer"
    durationBarContainer.BackgroundColor3 = Color3.new(0, 0, 0)
    durationBarContainer.BackgroundTransparency = 0.7
    durationBarContainer.BorderSizePixel = 0
    durationBarContainer.Position = UDim2.new(0, 0, 1, -6)
    durationBarContainer.Size = UDim2.new(1, 0, 0, 6)
    durationBarContainer.ZIndex = 101
    durationBarContainer.Parent = notification
    
    local durationBarCorner = Instance.new("UICorner")
    durationBarCorner.CornerRadius = UDim.new(0, 8)
    durationBarCorner.Parent = durationBarContainer
    
    local durationBar = Instance.new("Frame")
    durationBar.Name = "DurationBar"
    durationBar.BackgroundColor3 = outlineColor
    durationBar.BorderSizePixel = 0
    durationBar.Size = UDim2.new(1, 0, 1, 0)
    durationBar.ZIndex = 102
    durationBar.Parent = durationBarContainer
    
    local durationBarInnerCorner = Instance.new("UICorner")
    durationBarInnerCorner.CornerRadius = UDim.new(0, 8)
    durationBarInnerCorner.Parent = durationBar
    
    -- Calculate required height based on text
    local textService = game:GetService("TextService")
    local textSize = textService:GetTextSize(descLabel.Text, descLabel.TextSize, descLabel.Font, Vector2.new(descLabel.AbsoluteSize.X, math.huge))
    local requiredHeight = math.clamp(textSize.Y + 70, 100, 300)
    
    -- Animate notification entrance
    local slideIn = game:GetService("TweenService"):Create(
        notification,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Position = UDim2.new(1, -330, 0.05, 0), Size = UDim2.new(0, 320, 0, requiredHeight)}
    )
    slideIn:Play()
    
    -- Animation for duration bar
    local durationTween = game:GetService("TweenService"):Create(
        durationBar,
        TweenInfo.new(duration, Enum.EasingStyle.Linear),
        {Size = UDim2.new(0, 0, 1, 0)}
    )
    durationTween:Play()
    
    -- Close button functionality
    closeButton.MouseButton1Click:Connect(function()
        durationTween:Cancel()
        local slideOut = game:GetService("TweenService"):Create(
            notification,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
            {Position = UDim2.new(1, 10, 0.05, 0)}
        )
        slideOut:Play()
        slideOut.Completed:Wait()
        notification:Destroy()
    end)
    
    -- Auto-close after duration
    spawn(function()
        task.wait(duration)
        if notification and notification.Parent then
            local slideOut = game:GetService("TweenService"):Create(
                notification,
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
                {Position = UDim2.new(1, 10, 0.05, 0)}
            )
            slideOut:Play()
            slideOut.Completed:Wait()
            notification:Destroy()
        end
    end)
    
    return notification
end

return notify
